
{{#has_session_status}}
<div class='alert alert-info' role='alert'>
  {{session_status}}
</div>
{{/has_session_status}}

<div id='delete-success-alert' class='alert alert-success' role='alert' style='display: none;'>
                You have successfully deleted this record. This was a hard delete, no going back. But you can save again if you want..
            </div>

{{#is_new}}
<form action='/DURC/uniquecomment' method='POST'>
{{/is_new}}

{{^is_new}}
<form action='/DURC/uniquecomment/{{id}}' method='POST'>
    <input type='hidden' name='_method' value='PUT'>
{{/is_new}}

	<h1>uniquecomment</h1>
<div class='card'>
  <div class='card-header'>
<h4> {{durc_instance_name}}</h4>
<ul>
<li> <a href='/Zermelo/DURC_uniquecomment/'>Return to uniquecomment list</a> </li>
{{^is_new}}
<li> <a href='/DURC/uniquecomment/create'>Create new uniquecomment </a> </li>
{{/is_new}}
</ul>
  </div>
<div class='card-body'>

  <fieldset>
    <legend>Edit {{durc_instance_name}}  </legend>
	<input type='hidden' name='_token' value='{{csrf_token}}'>
	
  <div class='form-group row {{id_row_class}}'>
    <label for='id' class='col-sm-4 col-form-label'>id</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control  {{#errors.id.has_errors}}is-invalid{{/errors.id.has_errors}}' id='id' name='id' placeholder='' value='{{id}}' >
      <div class='invalid-feedback'>
          <ul>
          {{#errors.id.messages}}<li>{{.}}</li>{{/errors.id.messages}}
          </ul>
       </div>
    </div></div>
  <div class='form-group row {{simplified_comment_text_md5_row_class}}'>
    <label for='simplified_comment_text_md5' class='col-sm-4 col-form-label'>simplified_comment_text_md5</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control nullable {{#errors.simplified_comment_text_md5.has_errors}}is-invalid{{/errors.simplified_comment_text_md5.has_errors}}' id='simplified_comment_text_md5' name='simplified_comment_text_md5' placeholder='NULL' value='{{simplified_comment_text_md5}}' >
      <div class='invalid-feedback'>
          <ul>
          {{#errors.simplified_comment_text_md5.messages}}<li>{{.}}</li>{{/errors.simplified_comment_text_md5.messages}}
          </ul>
       </div>
    </div><div class='col-sm-1'>
                    <input class='form-check-input null-checkbox' type='checkbox' data-elem='simplified_comment_text_md5' name='simplified_comment_text_md5Null' id='simplified_comment_text_md5Null' value='simplified_comment_text_md5Null' {{simplified_comment_text_md5_checked}}>
                    <label class='form-check-label' for='simplified_comment_text_md5Null'>null</label>
                </div></div>
  <div class='form-group row {{simplified_comment_text_row_class}}'>
    <label for='simplified_comment_text' class='col-sm-4 col-form-label'>simplified_comment_text</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control  {{#errors.simplified_comment_text.has_errors}}is-invalid{{/errors.simplified_comment_text.has_errors}}' id='simplified_comment_text' name='simplified_comment_text' placeholder='' value='{{simplified_comment_text}}' >
      <div class='invalid-feedback'>
          <ul>
          {{#errors.simplified_comment_text.messages}}<li>{{.}}</li>{{/errors.simplified_comment_text.messages}}
          </ul>
       </div>
    </div></div>
  <div class='form-group row {{comment_count_row_class}}'>
    <label for='comment_count' class='col-sm-4 col-form-label'>comment_count</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control  {{#errors.comment_count.has_errors}}is-invalid{{/errors.comment_count.has_errors}}' id='comment_count' name='comment_count' placeholder='' value='{{comment_count}}' >
      <div class='invalid-feedback'>
          <ul>
          {{#errors.comment_count.messages}}<li>{{.}}</li>{{/errors.comment_count.messages}}
          </ul>
       </div>
    </div></div>
  <div class='form-group row'>
    <div class='col-sm-8'>
      <button type='submit' class='btn btn-primary'>Save Data</button>
    </div>
  </div>

</fieldset>
</div></div>
</form>
<br>
  <div class='form-group row'>
              <div class='col-sm-12 text-right'>

<form action='/DURC/uniquecomment/{{id}}' method='POST'>
    	<input type='hidden' name='_method' value='DELETE'>
	<input type='hidden' name='_token' value='{{csrf_token}}'>

              <button type='button' data-id='{{id}}' data-controller='uniquecomment' class='do-soft-delete btn btn-outline-danger'>Hard Delete uniquecomment</button>
</form>
              </div>
            </div>


<br>
<div class='card'>
  <div class='card-header'>
    Relationships
  </div>
<div class='card-body'>

<div class='card'>
  <div class='card-header'>
    Has many uniquecomment_to_comment ( <a href='/DURC/uniquecomment_to_comment/'>see all</a> )
{{^uniquecomment_to_comment}}
(no values)
{{/uniquecomment_to_comment}}
  </div>
<div class='card-body'>

<table id='table_uniquecomment_to_comment' class='table table-bordered table-hover table-responsive table-sm'>
<thead>
<tr>
			<th> comment_id </th>
			<th> uniquecomment_id </th>

</tr>
</thead>
<tbody>
{{#uniquecomment_to_comment}}
	<tr>
		{{#.}}
			<td>{{comment_id_DURClabel}} ({{comment_id}}) </td>			<td>{{uniquecomment_id_DURClabel}} ({{uniquecomment_id}}) </td>
		{{/.}}
	</tr>
{{/uniquecomment_to_comment}}
</tbody>
</table>
</div></div> <!-- end uniquecomment_to_comment card-->
<br>
</div></div> <!--end has many card-->
<br>

    <script type='text/javascript'>

        // These function control the spinner display when loading many remote entities
        let loading_queue = [];
        function add_to_loading_queue(element) {
            if (loading_queue.length == 0) {
                $('#loader').modal();
            }
            loading_queue.push(element);
        }

        function remove_from_loading_queue(element) {
            const index = loading_queue.indexOf(element);
            if (index >= 0) {
              loading_queue.splice(index, 1);
            }
            if (loading_queue.length == 0) {
                $('#loader').modal('hide');
            }
        }

    // This javascript controls the null checkboxes
        $(document).ready(function() {

            // keep an assoc array of the last entered values
            let last_null_values = {};

            $('.null-checkbox').change(function(e) {

                // get the id of the element we're next to
                let id = $(this).attr('data-elem');

                // store current value, and set to null
                if ($(this).prop('checked')) {
                    let c = confirm("Are you sure you want to overwrite this value with NULL?");
                    if (c === true) {
                        last_null_values[id]= $('#'+id).val();
                        $('#'+id).val(null);
                        $('#'+id).attr('readonly', true);
                    }
                } else {
                    $('#'+id).val(last_null_values[id]);
                    $('#'+id).attr('readonly', false);
                }
            });

            // If a field with a nulllable class is clicked, unset the null checkbox and unlock field
            $('.nullable').click(function(e) {
                let checkboxId = '#' + $(this).attr('id') + 'Null';
                if ($(checkboxId).prop('checked')) {
                    // Uncheck the null box and clear read-only by triggering change
                    $(checkboxId).prop('checked', '');
                    $(checkboxId).change();
                }
            });

            // Trigger change on page load. If the null box is checked, mark field readonly
            // If the null checkbox isn't checked, but the value is empty string, check null
            // checkbox and also mark readonly
            $('.null-checkbox').each(function() {
                let id = $(this).attr('data-elem');
                if ($(this).prop('checked')) {
                    // The null box is checked
                    $('#'+id).attr('readonly', true);
                } else if (!$(this).prop('checked') &&
                    $('#'+id).val() == '') {
                    // The null box is not checked, but the value is empty
                    // Check the null box
                    $(this).prop('checked', 'checked');
                    $('#'+id).attr('readonly', true);
                }
            });
        });
    </script>
