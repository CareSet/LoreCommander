
{{#has_session_status}}
<div class='alert alert-info' role='alert'>
  {{session_status}}
</div>
{{/has_session_status}}

<div id='delete-success-alert' class='alert alert-success' role='alert' style='display: none;'>
                You have successfully deleted this record. This was a hard delete, no going back. But you can save again if you want.. 
            </div>

{{#is_new}}
<form action='/DURC/author_book' method='POST'>
{{/is_new}}

{{^is_new}}
<form action='/DURC/author_book/{{id}}' method='POST'>
    <input type='hidden' name='_method' value='PUT'>
{{/is_new}}

	<h1>author_book</h1>
<div class='card'>
  <div class='card-header'>
<h4> {{durc_instance_name}}</h4>
<ul>
<li> <a href='/Zermelo/DURC_author_book/'>Return to author_book list</a> </li>
{{^is_new}}
<li> <a href='/DURC/author_book/create'>Create new author_book </a> </li>
{{/is_new}}
</ul>
  </div>
<div class='card-body'>

  <fieldset>
    <legend>Edit {{durc_instance_name}}  </legend>
	<input type='hidden' name='_token' value='{{csrf_token}}'>
	
  <div class='form-group row {{id_row_class}}'>
    <label for='id' class='col-sm-4 col-form-label'>id</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control {{#errors.id.has_errors}}is-invalid{{/errors.id.has_errors}}' id='id' name='id' placeholder='' value='{{id}}' >
      <div class='invalid-feedback'>
          <ul>
          {{#errors.id.messages}}<li>{{.}}</li>{{/errors.id.messages}}
          </ul>
       </div>
    </div></div>
  <div class='form-group row {{author_id_row_class}}'>
    <label for='author_id' class='col-sm-4 col-form-label'>author_id</label>
    <div class='col-sm-7'>
	Current id value: {{author_id}} (see below for lookup value)<br>
	<select class='select2_author_id form-control' id='author_id' name='author_id'  >
	<option value='{{author_id}}' selected='selected'>{{author_id}}</option>
	</select>
    </div>
  </div>

<script type='text/javascript'>

$('.select2_author_id').select2({
  ajax: {
    url: '/DURC/searchjson/author',
    delay: 1000,
    dataType: 'json',
    data: function (params) {
          var query = {
              q: params.term,
              page: params.page || 1
          }

          // Query parameters will be ?search=[term]&page=[page]
          return query;
      }
  }
});


</script>


  <div class='form-group row {{book_id_row_class}}'>
    <label for='book_id' class='col-sm-4 col-form-label'>book_id</label>
    <div class='col-sm-7'>
	Current id value: {{book_id}} (see below for lookup value)<br>
	<select class='select2_book_id form-control' id='book_id' name='book_id'  >
	<option value='{{book_id}}' selected='selected'>{{book_id}}</option>
	</select>
    </div>
  </div>

<script type='text/javascript'>

$('.select2_book_id').select2({
  ajax: {
    url: '/DURC/searchjson/book',
    delay: 1000,
    dataType: 'json',
    data: function (params) {
          var query = {
              q: params.term,
              page: params.page || 1
          }

          // Query parameters will be ?search=[term]&page=[page]
          return query;
      }
  }
});


</script>


  <div class='form-group row {{authortype_id_row_class}}'>
    <label for='authortype_id' class='col-sm-4 col-form-label'>authortype_id</label>
    <div class='col-sm-7'>
	Current id value: {{authortype_id}} (see below for lookup value)<br>
	<select class='select2_authortype_id form-control' id='authortype_id' name='authortype_id'  >
	<option value='{{authortype_id}}' selected='selected'>{{authortype_id}}</option>
	</select>
    </div>
  </div>

<script type='text/javascript'>

$('.select2_authortype_id').select2({
  ajax: {
    url: '/DURC/searchjson/authortype',
    delay: 1000,
    dataType: 'json',
    data: function (params) {
          var query = {
              q: params.term,
              page: params.page || 1
          }

          // Query parameters will be ?search=[term]&page=[page]
          return query;
      }
  }
});


</script>


  <div class='form-group row'>
    <div class='col-sm-8'>
      <button type='submit' class='btn btn-primary'>Save Data</button>
    </div>
  </div>
  
</fieldset>
</div></div>
</form>
<br>
  <div class='form-group row'>
              <div class='col-sm-12 text-right'>

<form action='/DURC/author_book/{{id}}' method='POST'>
    	<input type='hidden' name='_method' value='DELETE'>
	<input type='hidden' name='_token' value='{{csrf_token}}'>

              <button type='button' data-id='{{id}}' data-controller='author_book' class='do-soft-delete btn btn-outline-danger'>Hard Delete author_book</button>
</form>
              </div>
            </div>


<br>
<div class='card'>
  <div class='card-header'>
    Belongs To Relationships
  </div>
<div class='card-body'>

<div class='card'>
  <div class='card-header'>
    author ( <a href='/DURC/author/'>see all</a> )
{{^author}}
(no values)
{{/author}}
  </div>
<div class='card-body'>
<table id='table_author' class='table table-bordered table-hover table-responsive table-sm'>
<thead>
<tr>
			<th> id </th>
			<th> lastname </th>
			<th> firstname </th>
			<th> created_date </th>
			<th> updated_date </th>

</tr>
</thead>
<tbody>
{{#author}}
	<tr>
		{{#.}}
			<td><a href='/DURC/author/{{id}}'>{{id}}</a></td>
			<td>{{lastname}}</td>
			<td>{{firstname}}</td>
			<td>{{created_date}}</td>
			<td>{{updated_date}}</td>
		
		{{/.}}
	</tr>
{{/author}}
</tbody>
</table>
</div></div> <!-- end author card-->

<div class='card'>
  <div class='card-header'>
    book ( <a href='/DURC/book/'>see all</a> )
{{^book}}
(no values)
{{/book}}
  </div>
<div class='card-body'>
<table id='table_book' class='table table-bordered table-hover table-responsive table-sm'>
<thead>
<tr>
			<th> id </th>
			<th> title </th>
			<th> release_date </th>
			<th> created_at </th>
			<th> updated_at </th>

</tr>
</thead>
<tbody>
{{#book}}
	<tr>
		{{#.}}
			<td><a href='/DURC/book/{{id}}'>{{id}}</a></td>
			<td>{{title}}</td>
			<td>{{release_date}}</td>
			<td>{{created_at}}</td>
			<td>{{updated_at}}</td>
		
		{{/.}}
	</tr>
{{/book}}
</tbody>
</table>
</div></div> <!-- end book card-->

<div class='card'>
  <div class='card-header'>
    authortype ( <a href='/DURC/authortype/'>see all</a> )
{{^authortype}}
(no values)
{{/authortype}}
  </div>
<div class='card-body'>
<table id='table_authortype' class='table table-bordered table-hover table-responsive table-sm'>
<thead>
<tr>
			<th> id </th>
			<th> authortypedesc </th>
			<th> created_at </th>
			<th> updated_at </th>

</tr>
</thead>
<tbody>
{{#authortype}}
	<tr>
		{{#.}}
			<td><a href='/DURC/authortype/{{id}}'>{{id}}</a></td>
			<td>{{authortypedesc}}</td>
			<td>{{created_at}}</td>
			<td>{{updated_at}}</td>
		
		{{/.}}
	</tr>
{{/authortype}}
</tbody>
</table>
</div></div> <!-- end authortype card-->
</div></div> <!--end belongs to card-->
<br>
    
    <script type='text/javascript'>
    // This javascript controls the null checkboxes
        $(document).ready(function() {
            
            // keep an assoc array of the last entered values
            let last_null_values = {};
            
            $('.null-checkbox').change(function(e) {

                // get the id of the element we're next to
                let id = $(this).attr('data-elem');

                // store current value, and set to null
                if ($(this).prop('checked')) {
                    last_null_values[id]= $('#'+id).val();
                    $('#'+id).val(null);
                    $('#'+id).attr('readonly', true);
                } else {
                    $('#'+id).val(last_null_values[id]);
                    $('#'+id).attr('readonly', false);
                }
            });
            
            // Trigger change on page load. If the null box is checked, mark field readonly
            // If the null checkbox isn't checked, but the value is empty string, check null 
            // checkbox and also mark readonly
            $('.null-checkbox').each(function() {
                let id = $(this).attr('data-elem');
                if ($(this).prop('checked')) {
                    // The null box is checked
                    $('#'+id).attr('readonly', true);
                } else if (!$(this).prop('checked') &&
                    $('#'+id).val() == '') {
                    // The null box is not checked, but the value is empty
                    // Check the null box
                    $(this).prop('checked', 'checked');
                    $('#'+id).attr('readonly', true);
                }
            });
        });
    </script>
