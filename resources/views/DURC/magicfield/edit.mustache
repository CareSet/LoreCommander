
{{#has_session_status}}
<div class='alert alert-info' role='alert'>
  {{session_status}}
</div>
{{/has_session_status}}

<div id='delete-success-alert' class='alert alert-success' role='alert' style='display: none;'>
                You have successfully deleted this record. <a href='/DURC/magicfield/restore/{{id}}' data-id='{{id}}' data-controller='magicfield' class='do-recover btn btn-secondary'>Undo</a>
            </div>

{{#is_new}}
<form action='/DURC/magicfield' method='POST'>
{{/is_new}}

{{^is_new}}
<form action='/DURC/magicfield/{{id}}' method='POST'>
    <input type='hidden' name='_method' value='PUT'>
{{/is_new}}

	<h1>magicfield</h1>
<div class='card'>
  <div class='card-header'>
<h4> {{durc_instance_name}}</h4>
<ul>
<li> <a href='/Zermelo/DURC_magicfield/'>Return to magicfield list</a> </li>
{{^is_new}}
<li> <a href='/DURC/magicfield/create'>Create new magicfield </a> </li>
{{/is_new}}
</ul>
  </div>
<div class='card-body'>

  <fieldset>
    <legend>Edit {{durc_instance_name}}  </legend>
	<input type='hidden' name='_token' value='{{csrf_token}}'>
	
  <div class='form-group row {{id_row_class}}'>
    <label for='id' class='col-sm-4 col-form-label'>id</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control  {{#errors.id.has_errors}}is-invalid{{/errors.id.has_errors}}' id='id' name='id' placeholder='' value='{{id}}' >
      <div class='invalid-feedback'>
          <ul>
          {{#errors.id.messages}}<li>{{.}}</li>{{/errors.id.messages}}
          </ul>
       </div>
    </div></div>
  <div class='form-group row {{editsome_markdown_row_class}}'>
    <label for='editsome_markdown' class='col-sm-4 col-form-label'>editsome_markdown</label>
    <div class='col-sm-7'>
	<textarea id='editsome_markdown' name='editsome_markdown'  >{{editsome_markdown}}</textarea>
    </div>
  </div>
<script>
	new SimpleMDE({
		element: document.getElementById('editsome_markdown'),
		spellChecker: true,
	});
</script>

  <div class='form-group row {{typesome_sql_code_row_class}}'>
    <label for='typesome_sql_code' class='col-sm-4 col-form-label'>typesome_sql_code</label>
    <div class='col-sm-7'>
	<textarea style='height: auto;'  id='typesome_sql_code' name='typesome_sql_code' >{{typesome_sql_code}}

</textarea>
    </div>
  </div>
	<script src='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.39.0/mode/sql/sql.js'></script>
<script>

      var editor_typesome_sql_code = CodeMirror.fromTextArea(document.getElementById('typesome_sql_code'), {
        lineNumbers: true,
	viewportMargin: Infinity,
	theme: 'lesser-dark' 
	, mode: 'text/x-sql'
      });

</script>

  <div class='form-group row {{typesome_php_code_row_class}}'>
    <label for='typesome_php_code' class='col-sm-4 col-form-label'>typesome_php_code</label>
    <div class='col-sm-7'>
	<textarea style='height: auto;'  id='typesome_php_code' name='typesome_php_code' >{{typesome_php_code}}

</textarea>
    </div>
  </div>
	<script src='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.39.0/mode/php/php.js'></script>
<script>

      var editor_typesome_php_code = CodeMirror.fromTextArea(document.getElementById('typesome_php_code'), {
        lineNumbers: true,
	viewportMargin: Infinity,
	theme: 'lesser-dark' 
	, mode: 'php'
      });

</script>

  <div class='form-group row {{typesome_python_code_row_class}}'>
    <label for='typesome_python_code' class='col-sm-4 col-form-label'>typesome_python_code</label>
    <div class='col-sm-7'>
	<textarea style='height: auto;'  id='typesome_python_code' name='typesome_python_code' >{{typesome_python_code}}

</textarea>
    </div>
  </div>
	<script src='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.39.0/mode/python/python.js'></script>
<script>

      var editor_typesome_python_code = CodeMirror.fromTextArea(document.getElementById('typesome_python_code'), {
        lineNumbers: true,
	viewportMargin: Infinity,
	theme: 'lesser-dark' 
	, mode: 'python'
      });

</script>

  <div class='form-group row {{typesome_javascript_code_row_class}}'>
    <label for='typesome_javascript_code' class='col-sm-4 col-form-label'>typesome_javascript_code</label>
    <div class='col-sm-7'>
	<textarea style='height: auto;'  id='typesome_javascript_code' name='typesome_javascript_code' >{{typesome_javascript_code}}

</textarea>
    </div>
  </div>
	<script src='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.39.0/mode/javascript/javascript.js'></script>
<script>

      var editor_typesome_javascript_code = CodeMirror.fromTextArea(document.getElementById('typesome_javascript_code'), {
        lineNumbers: true,
	viewportMargin: Infinity,
	theme: 'lesser-dark' 
	, mode: 'javascript'
      });

</script>

  <div class='form-group row {{this_datetime_row_class}}'>
    <label for='this_datetime' class='col-sm-4 col-form-label'>this_datetime</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control  {{#errors.this_datetime.has_errors}}is-invalid{{/errors.this_datetime.has_errors}}' id='this_datetime' name='this_datetime' placeholder='' value='{{this_datetime}}' >

<button type='button' class='btn btn-primary' id='this_datetime_FontPicker'>
<img src='/css/ic_today_black_24dp_1x.png'> 
</button>
<button type='button' class='btn btn-primary' id='this_datetime_TodayNow'> Today and Now</button>
<div class='invalid-feedback'>
  <ul>
  {{#errors.this_datetime.messages}}<li>{{.}}</li>{{/errors.this_datetime.messages}}
  </ul>
</div><script>
	var this_datetimeConv = new AnyTime.Converter({format: '%Y-%m-%d %T'});
  	$('#this_datetime_TodayNow').click( function(e) {
      		$('#this_datetime').val(this_datetimeConv.format(new Date())).change(); } );

    	$('#this_datetime_FontPicker').click(
      		function(e) {
        		$('#this_datetime').AnyTime_noPicker().AnyTime_picker(
				{
    					format: '%Y-%m-%d %T',
    					formatUtcOffset: '%: (%@)'
				} 
			).focus();
        	e.preventDefault();
        	} );
</script>

    </div></div>
  <div class='form-group row {{this_date_row_class}}'>
    <label for='this_date' class='col-sm-4 col-form-label'>this_date</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control  {{#errors.this_date.has_errors}}is-invalid{{/errors.this_date.has_errors}}' id='this_date' name='this_date' placeholder='' value='{{this_date}}' >
        
    <button type='button' class='btn btn-primary' id='this_date_FontPicker'>
    <img src='/css/ic_today_black_24dp_1x.png'> 
    </button>
    <button type='button' class='btn btn-primary' id='this_date_TodayNow'> Today </button>
    <div class='invalid-feedback'>
      <ul>
      {{#errors.this_date.messages}}<li>{{.}}</li>{{/errors.this_date.messages}}
      </ul>
   </div>
   <script>
	var this_dateConv = new AnyTime.Converter({format: '%Y-%m-%d'});
  	$('#this_date_TodayNow').click( function(e) {
      		$('#this_date').val(this_dateConv.format(new Date())).change(); } );

    	$('#this_date_FontPicker').click(
      		function(e) {
        		$('#this_date').AnyTime_noPicker().AnyTime_picker(
				{
    					format: '%Y-%m-%d',
    					formatUtcOffset: '%: (%@)'
				} 
			).focus();
        	e.preventDefault();
        	} );
    </script>

    </div></div>
  <div class='form-group row {{created_at_row_class}}'>
    <label for='created_at' class='col-sm-4 col-form-label'>created_at</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control  {{#errors.created_at.has_errors}}is-invalid{{/errors.created_at.has_errors}}' id='created_at' name='created_at' placeholder='current_timestamp()' value='{{created_at}}' >

<button type='button' class='btn btn-primary' id='created_at_FontPicker'>
<img src='/css/ic_today_black_24dp_1x.png'> 
</button>
<button type='button' class='btn btn-primary' id='created_at_TodayNow'> Today and Now</button>
<div class='invalid-feedback'>
  <ul>
  {{#errors.created_at.messages}}<li>{{.}}</li>{{/errors.created_at.messages}}
  </ul>
</div><script>
	var created_atConv = new AnyTime.Converter({format: '%Y-%m-%d %T'});
  	$('#created_at_TodayNow').click( function(e) {
      		$('#created_at').val(created_atConv.format(new Date())).change(); } );

    	$('#created_at_FontPicker').click(
      		function(e) {
        		$('#created_at').AnyTime_noPicker().AnyTime_picker(
				{
    					format: '%Y-%m-%d %T',
    					formatUtcOffset: '%: (%@)'
				} 
			).focus();
        	e.preventDefault();
        	} );
</script>

    </div></div>
  <div class='form-group row {{updated_at_row_class}}'>
    <label for='updated_at' class='col-sm-4 col-form-label'>updated_at</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control  {{#errors.updated_at.has_errors}}is-invalid{{/errors.updated_at.has_errors}}' id='updated_at' name='updated_at' placeholder='current_timestamp()' value='{{updated_at}}' >

<button type='button' class='btn btn-primary' id='updated_at_FontPicker'>
<img src='/css/ic_today_black_24dp_1x.png'> 
</button>
<button type='button' class='btn btn-primary' id='updated_at_TodayNow'> Today and Now</button>
<div class='invalid-feedback'>
  <ul>
  {{#errors.updated_at.messages}}<li>{{.}}</li>{{/errors.updated_at.messages}}
  </ul>
</div><script>
	var updated_atConv = new AnyTime.Converter({format: '%Y-%m-%d %T'});
  	$('#updated_at_TodayNow').click( function(e) {
      		$('#updated_at').val(updated_atConv.format(new Date())).change(); } );

    	$('#updated_at_FontPicker').click(
      		function(e) {
        		$('#updated_at').AnyTime_noPicker().AnyTime_picker(
				{
    					format: '%Y-%m-%d %T',
    					formatUtcOffset: '%: (%@)'
				} 
			).focus();
        	e.preventDefault();
        	} );
</script>

    </div></div>
  <div class='form-group row {{deleted_at_row_class}}'>
    <label for='deleted_at' class='col-sm-4 col-form-label'>deleted_at</label>
    <div class='col-sm-7'>
      <input type='text' class='form-control nullable {{#errors.deleted_at.has_errors}}is-invalid{{/errors.deleted_at.has_errors}}' id='deleted_at' name='deleted_at' placeholder='NULL' value='{{deleted_at}}' >

<button type='button' class='btn btn-primary' id='deleted_at_FontPicker'>
<img src='/css/ic_today_black_24dp_1x.png'> 
</button>
<button type='button' class='btn btn-primary' id='deleted_at_TodayNow'> Today and Now</button>
<div class='invalid-feedback'>
  <ul>
  {{#errors.deleted_at.messages}}<li>{{.}}</li>{{/errors.deleted_at.messages}}
  </ul>
</div><script>
	var deleted_atConv = new AnyTime.Converter({format: '%Y-%m-%d %T'});
  	$('#deleted_at_TodayNow').click( function(e) {
      		$('#deleted_at').val(deleted_atConv.format(new Date())).change(); } );

    	$('#deleted_at_FontPicker').click(
      		function(e) {
        		$('#deleted_at').AnyTime_noPicker().AnyTime_picker(
				{
    					format: '%Y-%m-%d %T',
    					formatUtcOffset: '%: (%@)'
				} 
			).focus();
        	e.preventDefault();
        	} );
</script>

    </div><div class='col-sm-1'>
                    <input class='form-check-input null-checkbox' type='checkbox' data-elem='deleted_at' name='deleted_atNull' id='deleted_atNull' value='deleted_atNull' {{deleted_at_checked}}>
                    <label class='form-check-label' for='deleted_atNull'>null</label>
                </div></div>
  <div class='form-group row'>
    <div class='col-sm-8'>
      <button type='submit' class='btn btn-primary'>Save Data</button>
    </div>
  </div>
  
</fieldset>
</div></div>
</form>
<br>
  
{{#is_new}}
<form action='/DURC/magicfield' method='POST'>
{{/is_new}}

{{^is_new}}
<form action='/DURC/magicfield/{{id}}' method='POST'>
    <input type='hidden' name='_method' value='PUT'>
{{/is_new}}

<div class='form-group row'>
              <div class='col-sm-12 text-right'>
              <button type='button' data-id='{{id}}' data-controller='magicfield' class='do-soft-delete btn btn-outline-danger'>Delete</button>
              </div>
            </div>
</form>



<br>
    
    <script type='text/javascript'>
    
        // These function control the spinner display when loading many remote entities
        let loading_queue = [];
        function add_to_loading_queue(element) {
            if (loading_queue.length == 0) {
                $('#loader').modal();
            }
            loading_queue.push(element);
        }

        function remove_from_loading_queue(element) {
            const index = loading_queue.indexOf(element);
            if (index >= 0) {
              loading_queue.splice(index, 1);
            }
            if (loading_queue.length == 0) {
                $('#loader').modal('hide');
            }
        }
        
    // This javascript controls the null checkboxes
        $(document).ready(function() {
            
            // keep an assoc array of the last entered values
            let last_null_values = {};
            
            $('.null-checkbox').change(function(e) {

                // get the id of the element we're next to
                let id = $(this).attr('data-elem');

                // store current value, and set to null
                if ($(this).prop('checked')) {
                    let c = confirm("Are you sure you want to overwrite this value with NULL?");
                    if (c === true) {
                        last_null_values[id]= $('#'+id).val();
                        $('#'+id).val(null);
                        $('#'+id).attr('readonly', true);
                    }
                } else {
                    $('#'+id).val(last_null_values[id]);
                    $('#'+id).attr('readonly', false);
                }
            });
            
            // If a field with a nulllable class is clicked, unset the null checkbox and unlock field
            $('.nullable').click(function(e) {
                let checkboxId = '#' + $(this).attr('id') + 'Null';
                if ($(checkboxId).prop('checked')) {
                    // Uncheck the null box and clear read-only by triggering change
                    $(checkboxId).prop('checked', '');
                    $(checkboxId).change();
                }               
            });
            
            // Trigger change on page load. If the null box is checked, mark field readonly
            // If the null checkbox isn't checked, but the value is empty string, check null 
            // checkbox and also mark readonly
            $('.null-checkbox').each(function() {
                let id = $(this).attr('data-elem');
                if ($(this).prop('checked')) {
                    // The null box is checked
                    $('#'+id).attr('readonly', true);
                } else if (!$(this).prop('checked') &&
                    $('#'+id).val() == '') {
                    // The null box is not checked, but the value is empty
                    // Check the null box
                    $(this).prop('checked', 'checked');
                    $('#'+id).attr('readonly', true);
                }
            });
        });
    </script>
