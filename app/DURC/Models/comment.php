<?php

namespace App\DURC\Models;

use CareSet\DURC\DURCModel;
use CareSet\DURC\DURC;
//use Owen It\Auditing\Contracts\Auditable;
/*
	Note this class was auto-generated from 

mirrulation.comment by DURC.

	This class will be overwritten during future auto-generation runs..
	Itjust reflects whatever is in the database..
	DO NOT EDIT THIS FILE BY HAND!!
	Your changes go in comment.php 

*/

class comment extends DURCModel {

	 //not auditable, configured using is_auditable = 0 in config json

    

    
        // the datbase for this model
        protected $table = 'mirrulation.comment';

	//DURC will dymanically copy these into the $with variable... which prevents recursion problem: https://laracasts.com/discuss/channels/eloquent/eager-load-deep-recursion-problem?page=1
		protected $DURC_selfish_with = [ 
			'unique_comment_cluster', //from from one
			'other_unique_comment_cluster', //from from one
		];


	//DURC did not detect any date fields

	public $timestamps = false;
	//DURC NOTE: did not find updated_at and created_at fields for this model

	
	
	

	//for many functions to work, we need to be able to do a lookup on the field_type and get back the MariaDB/MySQL column type.
	static $field_type_map = [
		'id' => 'int',
		'commentId' => 'varchar',
		'comment_on_documentId' => 'varchar',
		'comment_date_text' => 'varchar',
		'comment_date' => 'datetime',
		'comment_text' => 'longtext',
		'simplified_comment_text' => 'longtext',
	]; //end field_type_map
		
    // Indicate which fields are nullable for the UI to be able to validate required/present form elements
    protected $non_nullable_fields = [
		'id',
		'commentId',
		'comment_on_documentId',
		'comment_date_text',
		'comment_text',
		'simplified_comment_text',
	]; // End of nullable fields

    // Use default_values array to specify the default values for each field (if any) indicated by the DB schema, to be used as placeholder on form elements
    protected $default_values = [
		'id' => null,
		'commentId' => null,
		'comment_on_documentId' => null,
		'comment_date_text' => null,
		'comment_date' => 'NULL',
		'comment_text' => null,
		'simplified_comment_text' => null,
	];  // End of attributes
        
    //everything is fillable by default
    protected $guarded = [];
		
    // These are validation rules used by the DURCModel parent to validate data before storage
    protected static $rules = [
		'commentId' => 'required',
		'comment_on_documentId' => 'required',
		'comment_date_text' => 'required',
		'comment_date' => 'nullable',
		'comment_text' => 'required',
		'simplified_comment_text' => 'required',
	]; // End of validation rules
		        
		
//DURC HAS_MANY SECTION

			//DURC did not detect any has_many relationships
		
		
//DURC HAS_ONE SECTION

/**
*	get all the unique_comment_cluster for this comment
*/
	public function unique_comment_cluster(){
		return $this->hasOne('App\comment_cluster','unique_comment_id','id');
	}


/**
*	get all the other_unique_comment_cluster for this comment
*/
	public function other_unique_comment_cluster(){
		return $this->hasOne('App\comment_cluster','other_unique_comment_id','id');
	}



		
//DURC BELONGS_TO SECTION

			//DURC did not detect any belongs_to relationships

//Originating SQL Schema
/*
CREATE TABLE `mirrulation`.`comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `commentId` varchar(100) NOT NULL,
  `comment_on_documentId` varchar(50) NOT NULL,
  `comment_date_text` varchar(50) NOT NULL,
  `comment_date` datetime DEFAULT NULL,
  `comment_text` longtext NOT NULL,
  `simplified_comment_text` longtext NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `commentId` (`commentId`),
  FULLTEXT KEY `full_on_comment_index` (`comment_text`),
  FULLTEXT KEY `simplified_comment_text` (`simplified_comment_text`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
*/


}//end of comment